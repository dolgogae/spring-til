plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'groovy'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // testcontainers
//    testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.4-M1-groovy-4.0'
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation 'org.testcontainers:mariadb:1.17.1'

    // spock
//    testImplementation('org.spockframework:spock-core:2.1-groovy-3.0')
//    testImplementation('org.spockframework:spock-spring:2.1-groovy-3.0')

    implementation 'io.seruco.encoding:base62:0.1.3'

    // 런타임에 클래스 기반 spock mock을 만들기 위해서 필요
    testImplementation('net.bytebuddy:byte-buddy:1.12.10')

    // mockWebServer
    testImplementation('com.squareup.okhttp3:okhttp:4.10.0')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.10.0')

    // retry
    implementation 'org.springframework.retry:spring-retry'
}

tasks.named('test') {
    useJUnitPlatform()
}